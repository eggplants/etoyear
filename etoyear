#!/usr/bin/env bash

readonly VER='0.0.4'
readonly CREATE_YEAR='2019-2021'
readonly AUTHOR='haruna <github.com/eggplants>'
readonly ANIMALS_EMOJI=(
  🐒 🐔 🐕 🐗 🐁 🐄
  🐯 🐇 🐲 🐍 🐎 🐏
)
readonly ANIMALS_KANJI=(
  申 酉 戌 亥 子 丑
  寅 卯 辰 巳 午 羊
)

# help
function show_help() {
  cat << EOS
NAME:
    etoyear - show eto-year list

USAGE:
    etoyear [-hvk] <begin> <num>

OPTION:
    -h, --help    : show help
    -v, --version : show version
    -k, --kanji   : show animal(s) in kanji
   
VERSION:
EOS
  show_version | sed 's/^/    /'
}

# version
function show_version() {
  cat << EOS
etoyear version ${VER}
Copyright (c) ${CREATE_YEAR} ${AUTHOR}
Released under the MIT License.
EOS
}

# main
function main() {
  # prosess options(help, version, kanji)
  local animals year times
  args=()
  animals=("${ANIMALS_EMOJI[@]}")
  for i in "${@}"; do
    case "$i" in
      -h | --help)
        show_help
        return 0
        ;;
      -v | --version)
        show_version
        return 0
        ;;
      -k | --kanji)
        animals=("${ANIMALS_KANJI[@]}")
        ;;
      -*)
        echo "[err]: invalid option $i" >&2
        show_help
        return 1
        ;;
      *)
        args+=("$i")
        ;;
    esac
  done

  if [ ${#args[@]} = 0 ]; then
    year="$(date +%Y)"
    times="12"
  elif [ ${#args[@]} = 2 ]; then
    if [[ ${args[0]} -le 0 ]]; then
      echo "[err]: begin year (${args[0]}) should be positive int" >&2
      show_help
      exit 1
    elif [ "${args[1]}" -le 0 ]; then
      echo "[err]: num (${args[1]}) should be positive int" >&2
      show_help
      exit 1
    else
      year="${args[0]}"
      times="${args[1]}"
    fi
  else
    echo "[err]: positioal argnum (${#args[@]}) should be 2" >&2
    show_help
    return 1
  fi

  local ind="$((year % 12))"
  for ((i = 0; i < times; i++)); do
    at=$(((ind + i) % 12))
    echo -n "$((year + i)) "
    echo "${animals[at]}"
  done
}

main "$@"
exit $?
